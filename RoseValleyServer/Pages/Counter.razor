@page "/counter"
@inject IJSRuntime JsRun

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>


<div class= "row">
   <button class ="btn alert-success" @onclick="TestSuccess">Test</button>
</div>

<div class= "row">
   <button class ="btn alert-alert-danger" @onclick="TestFail">Test</button>
</div>

<div class= "row">
   <button class ="btn alert-success" @onclick="TestSuccessS">Test</button>
</div>

<div class= "row">
   <button class ="btn alert-alert-danger" @onclick="TestFailS">Test</button>
</div>


@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task TestSuccess()
    {
        await JsRun.ToastrSuccess("Success Message");
    }
    private async Task TestFail()
    {
        await JsRun.ToastrError("Error Message");
    }

    
    private async Task TestSuccessS()
    {
        await JsRun.InvokeVoidAsync("ShowSwal", "success" ,"Success Message");
    }
    private async Task TestFailS ()
    {
        await JsRun.InvokeVoidAsync("ShowSwal", "error" ,"Error Message");
    }
}
